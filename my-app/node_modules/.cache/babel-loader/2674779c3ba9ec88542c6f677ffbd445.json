{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\negat\\\\IdeaProjects\\\\spring-rest-api\\\\my-app\\\\src\\\\components\\\\taskForm.jsx\";\nimport React from 'react';\n\nclass TaskForm extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      const basePath = 'http://localhost:8080/api/v1/tasks';\n      console.log(this.state);\n      fetch(basePath, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state)\n      }).then(function (response) {\n        return response;\n      });\n      event.preventDefault();\n    };\n\n    this.handleInputChange = (idx, event) => {\n      const target = event.target;\n      const name = target.name;\n      let error = '';\n\n      if (isNaN(target.value)) {\n        error = `${name} field can only be number`;\n      }\n\n      if (!target.value) {\n        error = `${name} field cannot be empty`;\n      }\n\n      this.state.inputs[idx] = { ...this.state.inputs[idx],\n        value: target.value,\n        error\n      };\n      this.setState({\n        inputs: [...this.state.inputs]\n      });\n    };\n\n    this.state = {\n      title: '',\n      description: '',\n      severity: ''\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      severity: 0\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container align-self-auto p-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      autoComplete: \"off\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      name: \"titleField\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Enter Title Here ...\",\n      className: \"form-control\",\n      id: \"title\",\n      type: \"text\",\n      value: this.state.value,\n      name: \"title\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \"Severity\"), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"severitylevel\",\n      className: \"custom-select  severity-Block\",\n      name: \"severity\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, \"Low\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, \"Medium\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, \"High\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      name: \"DescriptionLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control\",\n      name: \"description\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nexport default TaskForm;","map":{"version":3,"sources":["C:/Users/negat/IdeaProjects/spring-rest-api/my-app/src/components/taskForm.jsx"],"names":["React","TaskForm","Component","constructor","handleChange","event","setState","target","name","value","handleSubmit","basePath","console","log","state","fetch","method","headers","body","JSON","stringify","then","response","preventDefault","handleInputChange","idx","error","isNaN","inputs","title","description","severity","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nclass TaskForm\r\n    extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            title: '',\r\n            description: '',\r\n            severity: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({severity: 0})\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        const basePath = 'http://localhost:8080/api/v1/tasks';\r\n        console.log(this.state)\r\n\r\n        fetch(basePath, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(this.state),\r\n        }).then(function (response) {\r\n            return response;\r\n        })\r\n        event.preventDefault();\r\n    }\r\n    handleInputChange = (idx, event) => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let error = '';\r\n\r\n        if (isNaN(target.value)) {\r\n            error = `${name} field can only be number`\r\n        }\r\n\r\n        if (!target.value) {\r\n            error = `${name} field cannot be empty`\r\n        }\r\n\r\n        this.state.inputs[idx] = {\r\n            ...this.state.inputs[idx],\r\n            value: target.value,\r\n            error\r\n        }\r\n\r\n        this.setState({\r\n            inputs: [...this.state.inputs]\r\n        });\r\n    }\r\n    render() {\r\n        return (<div className=\"container align-self-auto p-5\">\r\n            <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label  name=\"titleField\">Title</label>\r\n                    <input   placeholder=\"Enter Title Here ...\" className=\"form-control\" id=\"title\" type=\"text\" value={this.state.value} name=\"title\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <div className=\"container\"/>\r\n                    <label>Severity</label>\r\n                    <select id=\"severitylevel\" className=\"custom-select  severity-Block\" name=\"severity\" onChange={this.handleChange}>\r\n                        <option value=\"0\">Low</option>\r\n                        <option value=\"1\">Medium</option>\r\n                        <option value=\"2\">High</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label name=\"DescriptionLabel\">Description</label>\r\n                    <textarea className=\"form-control\" name=\"description\" onChange={this.handleChange}/>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-sm\">Submit</button>\r\n            </form>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default TaskForm;"]},"metadata":{},"sourceType":"module"}
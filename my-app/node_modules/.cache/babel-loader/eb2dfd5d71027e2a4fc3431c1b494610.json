{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOuterNumberPosition = getOuterNumberPosition;\nexports.getClockHandLength = getClockHandLength;\nexports.getClockHandCirclePosition = getClockHandCirclePosition;\nexports.getClockHandCircleRadius = getClockHandCircleRadius;\nexports.INNER_NUMBER_POSITIONING = exports.INITIAL_MINUTE_TRANSFORM = exports.INITIAL_HOUR_TRANSFORM = exports.NUMBER_OUTER_POSITION = exports.NUMBER_RADIUS_REGULAR = exports.HOUR_24_OUTER_FONT_SIZE = exports.HOUR_24_INNER_FONT_SIZE = exports.NUMBER_REGULAR_FONT_SIZE = exports.INNER_NUMBER_RADIUS = exports.CLOCK_SIZE = exports.CLOCK_RADIUS = exports.VISIBLE_NUMBERS_PER_CIRCLE = exports.CLOCK_VALUES = exports.MERIDIEM = exports.MODE = exports.MINUTES = void 0;\nconst MINUTES = ['05', 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, '00'].map(a => a.toString());\nexports.MINUTES = MINUTES;\nconst MINUTES_60 = Array.from(Array(60), (_, i) => i.toString());\nconst HOURS_12 = Array.from(Array(12), (_, i) => (i + 1).toString());\nconst HOURS_24 = Array.from(Array(23), (_, i) => (i + 1).toString()).concat('00');\nlet MODE;\nexports.MODE = MODE;\n\n(function (MODE) {\n  MODE[\"MINUTES\"] = \"MINUTES\";\n  MODE[\"HOURS_12\"] = \"HOURS_12\";\n  MODE[\"HOURS_24\"] = \"HOURS_24\";\n})(MODE || (exports.MODE = MODE = {}));\n\nlet MERIDIEM;\n/*\n\t- increments is how many splits on clock, visible or invisible\n*/\n\nexports.MERIDIEM = MERIDIEM;\n\n(function (MERIDIEM) {\n  MERIDIEM[\"am\"] = \"am\";\n  MERIDIEM[\"pm\"] = \"pm\";\n})(MERIDIEM || (exports.MERIDIEM = MERIDIEM = {}));\n\nconst CLOCK_VALUES = {\n  [MODE.MINUTES]: {\n    increments: 60,\n    numbers: MINUTES,\n    dropdown: MINUTES_60\n  },\n  [MODE.HOURS_12]: {\n    increments: 12,\n    numbers: HOURS_12,\n    dropdown: HOURS_12\n  },\n  [MODE.HOURS_24]: {\n    increments: 12,\n    numbers: HOURS_24.slice(12),\n    numbersInner: HOURS_24.slice(0, 12),\n    dropdown: HOURS_24\n  } // number of actual numbers to display\n\n};\nexports.CLOCK_VALUES = CLOCK_VALUES;\nconst VISIBLE_NUMBERS_PER_CIRCLE = 12; // radius of clock, in px\n\nexports.VISIBLE_NUMBERS_PER_CIRCLE = VISIBLE_NUMBERS_PER_CIRCLE;\nconst CLOCK_RADIUS = 110;\nexports.CLOCK_RADIUS = CLOCK_RADIUS;\nconst CLOCK_SIZE = CLOCK_RADIUS * 2;\n/*\n\tradius of invisible inner circle for 24 hour numbers\n\t- controls how far out the inner circle comes and\n\thow far in numbers come as well\n */\n\nexports.CLOCK_SIZE = CLOCK_SIZE;\nconst INNER_NUMBER_RADIUS = 77; // font sizes\n\nexports.INNER_NUMBER_RADIUS = INNER_NUMBER_RADIUS;\nconst NUMBER_REGULAR_FONT_SIZE = 16;\nexports.NUMBER_REGULAR_FONT_SIZE = NUMBER_REGULAR_FONT_SIZE;\nconst HOUR_24_INNER_FONT_SIZE = 15;\nexports.HOUR_24_INNER_FONT_SIZE = HOUR_24_INNER_FONT_SIZE;\nconst HOUR_24_OUTER_FONT_SIZE = 13; // size of circle surrounding individual numbers\n// loosely based on font sizes above\n\nexports.HOUR_24_OUTER_FONT_SIZE = HOUR_24_OUTER_FONT_SIZE;\nconst NUMBER_RADIUS_REGULAR = 34;\nexports.NUMBER_RADIUS_REGULAR = NUMBER_RADIUS_REGULAR;\nconst NUMBER_RADIUS_HOUR_24_OUTER = 32;\nconst NUMBER_RADIUS_HOUR_24_INNER = 28; // positioning of numbers\n\nconst NUMBER_OUTER_POSITION = 22;\nexports.NUMBER_OUTER_POSITION = NUMBER_OUTER_POSITION;\nconst NUMBER_OUTER_POSITION_24_HOUR = 18; // controls how far out to move numbers during 24h mode\n\nconst NUMBER_INNER_POSITION_24_HOUR = CLOCK_RADIUS - INNER_NUMBER_RADIUS + NUMBER_RADIUS_HOUR_24_INNER / 2;\n\nfunction getOuterNumberPosition(mode) {\n  return mode === MODE.HOURS_24 ? NUMBER_OUTER_POSITION_24_HOUR : NUMBER_OUTER_POSITION;\n} // initial position of hours/minutes before animating to final position\n\n\nconst INITIAL_HOUR_TRANSFORM = NUMBER_OUTER_POSITION - 32;\nexports.INITIAL_HOUR_TRANSFORM = INITIAL_HOUR_TRANSFORM;\nconst INITIAL_MINUTE_TRANSFORM = NUMBER_OUTER_POSITION + 28; // clock hand stuff\n\nexports.INITIAL_MINUTE_TRANSFORM = INITIAL_MINUTE_TRANSFORM;\n\nfunction getClockHandLength(mode, inner) {\n  if (mode !== MODE.HOURS_24) {\n    return NUMBER_OUTER_POSITION;\n  }\n\n  return inner ? NUMBER_INNER_POSITION_24_HOUR : NUMBER_OUTER_POSITION_24_HOUR;\n}\n\nfunction getClockHandCirclePosition(mode, inner) {\n  if (mode !== MODE.HOURS_24) {\n    return NUMBER_OUTER_POSITION;\n  }\n\n  return inner ? NUMBER_INNER_POSITION_24_HOUR : NUMBER_OUTER_POSITION_24_HOUR;\n}\n\nfunction getClockHandCircleRadius(mode, inner) {\n  if (mode !== MODE.HOURS_24) {\n    return NUMBER_RADIUS_REGULAR / 2;\n  }\n\n  return inner ? NUMBER_RADIUS_HOUR_24_INNER / 2 : NUMBER_RADIUS_HOUR_24_OUTER / 2;\n}\n\nconst animationChange = 22;\nconst INNER_NUMBER_POSITIONING = {\n  exit: NUMBER_INNER_POSITION_24_HOUR + animationChange,\n  enter: NUMBER_INNER_POSITION_24_HOUR\n};\nexports.INNER_NUMBER_POSITIONING = INNER_NUMBER_POSITIONING;","map":{"version":3,"sources":["C:/Users/negat/IdeaProjects/spring-rest-api/my-app/node_modules/react-timekeeper/lib/helpers/constants.js"],"names":["Object","defineProperty","exports","value","getOuterNumberPosition","getClockHandLength","getClockHandCirclePosition","getClockHandCircleRadius","INNER_NUMBER_POSITIONING","INITIAL_MINUTE_TRANSFORM","INITIAL_HOUR_TRANSFORM","NUMBER_OUTER_POSITION","NUMBER_RADIUS_REGULAR","HOUR_24_OUTER_FONT_SIZE","HOUR_24_INNER_FONT_SIZE","NUMBER_REGULAR_FONT_SIZE","INNER_NUMBER_RADIUS","CLOCK_SIZE","CLOCK_RADIUS","VISIBLE_NUMBERS_PER_CIRCLE","CLOCK_VALUES","MERIDIEM","MODE","MINUTES","map","a","toString","MINUTES_60","Array","from","_","i","HOURS_12","HOURS_24","concat","increments","numbers","dropdown","slice","numbersInner","NUMBER_RADIUS_HOUR_24_OUTER","NUMBER_RADIUS_HOUR_24_INNER","NUMBER_OUTER_POSITION_24_HOUR","NUMBER_INNER_POSITION_24_HOUR","mode","inner","animationChange","exit","enter"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOuterNumberPosition = getOuterNumberPosition;\nexports.getClockHandLength = getClockHandLength;\nexports.getClockHandCirclePosition = getClockHandCirclePosition;\nexports.getClockHandCircleRadius = getClockHandCircleRadius;\nexports.INNER_NUMBER_POSITIONING = exports.INITIAL_MINUTE_TRANSFORM = exports.INITIAL_HOUR_TRANSFORM = exports.NUMBER_OUTER_POSITION = exports.NUMBER_RADIUS_REGULAR = exports.HOUR_24_OUTER_FONT_SIZE = exports.HOUR_24_INNER_FONT_SIZE = exports.NUMBER_REGULAR_FONT_SIZE = exports.INNER_NUMBER_RADIUS = exports.CLOCK_SIZE = exports.CLOCK_RADIUS = exports.VISIBLE_NUMBERS_PER_CIRCLE = exports.CLOCK_VALUES = exports.MERIDIEM = exports.MODE = exports.MINUTES = void 0;\nconst MINUTES = ['05', 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, '00'].map(a => a.toString());\nexports.MINUTES = MINUTES;\nconst MINUTES_60 = Array.from(Array(60), (_, i) => i.toString());\nconst HOURS_12 = Array.from(Array(12), (_, i) => (i + 1).toString());\nconst HOURS_24 = Array.from(Array(23), (_, i) => (i + 1).toString()).concat('00');\nlet MODE;\nexports.MODE = MODE;\n\n(function (MODE) {\n  MODE[\"MINUTES\"] = \"MINUTES\";\n  MODE[\"HOURS_12\"] = \"HOURS_12\";\n  MODE[\"HOURS_24\"] = \"HOURS_24\";\n})(MODE || (exports.MODE = MODE = {}));\n\nlet MERIDIEM;\n/*\n\t- increments is how many splits on clock, visible or invisible\n*/\n\nexports.MERIDIEM = MERIDIEM;\n\n(function (MERIDIEM) {\n  MERIDIEM[\"am\"] = \"am\";\n  MERIDIEM[\"pm\"] = \"pm\";\n})(MERIDIEM || (exports.MERIDIEM = MERIDIEM = {}));\n\nconst CLOCK_VALUES = {\n  [MODE.MINUTES]: {\n    increments: 60,\n    numbers: MINUTES,\n    dropdown: MINUTES_60\n  },\n  [MODE.HOURS_12]: {\n    increments: 12,\n    numbers: HOURS_12,\n    dropdown: HOURS_12\n  },\n  [MODE.HOURS_24]: {\n    increments: 12,\n    numbers: HOURS_24.slice(12),\n    numbersInner: HOURS_24.slice(0, 12),\n    dropdown: HOURS_24\n  } // number of actual numbers to display\n\n};\nexports.CLOCK_VALUES = CLOCK_VALUES;\nconst VISIBLE_NUMBERS_PER_CIRCLE = 12; // radius of clock, in px\n\nexports.VISIBLE_NUMBERS_PER_CIRCLE = VISIBLE_NUMBERS_PER_CIRCLE;\nconst CLOCK_RADIUS = 110;\nexports.CLOCK_RADIUS = CLOCK_RADIUS;\nconst CLOCK_SIZE = CLOCK_RADIUS * 2;\n/*\n\tradius of invisible inner circle for 24 hour numbers\n\t- controls how far out the inner circle comes and\n\thow far in numbers come as well\n */\n\nexports.CLOCK_SIZE = CLOCK_SIZE;\nconst INNER_NUMBER_RADIUS = 77; // font sizes\n\nexports.INNER_NUMBER_RADIUS = INNER_NUMBER_RADIUS;\nconst NUMBER_REGULAR_FONT_SIZE = 16;\nexports.NUMBER_REGULAR_FONT_SIZE = NUMBER_REGULAR_FONT_SIZE;\nconst HOUR_24_INNER_FONT_SIZE = 15;\nexports.HOUR_24_INNER_FONT_SIZE = HOUR_24_INNER_FONT_SIZE;\nconst HOUR_24_OUTER_FONT_SIZE = 13; // size of circle surrounding individual numbers\n// loosely based on font sizes above\n\nexports.HOUR_24_OUTER_FONT_SIZE = HOUR_24_OUTER_FONT_SIZE;\nconst NUMBER_RADIUS_REGULAR = 34;\nexports.NUMBER_RADIUS_REGULAR = NUMBER_RADIUS_REGULAR;\nconst NUMBER_RADIUS_HOUR_24_OUTER = 32;\nconst NUMBER_RADIUS_HOUR_24_INNER = 28; // positioning of numbers\n\nconst NUMBER_OUTER_POSITION = 22;\nexports.NUMBER_OUTER_POSITION = NUMBER_OUTER_POSITION;\nconst NUMBER_OUTER_POSITION_24_HOUR = 18; // controls how far out to move numbers during 24h mode\n\nconst NUMBER_INNER_POSITION_24_HOUR = CLOCK_RADIUS - INNER_NUMBER_RADIUS + NUMBER_RADIUS_HOUR_24_INNER / 2;\n\nfunction getOuterNumberPosition(mode) {\n  return mode === MODE.HOURS_24 ? NUMBER_OUTER_POSITION_24_HOUR : NUMBER_OUTER_POSITION;\n} // initial position of hours/minutes before animating to final position\n\n\nconst INITIAL_HOUR_TRANSFORM = NUMBER_OUTER_POSITION - 32;\nexports.INITIAL_HOUR_TRANSFORM = INITIAL_HOUR_TRANSFORM;\nconst INITIAL_MINUTE_TRANSFORM = NUMBER_OUTER_POSITION + 28; // clock hand stuff\n\nexports.INITIAL_MINUTE_TRANSFORM = INITIAL_MINUTE_TRANSFORM;\n\nfunction getClockHandLength(mode, inner) {\n  if (mode !== MODE.HOURS_24) {\n    return NUMBER_OUTER_POSITION;\n  }\n\n  return inner ? NUMBER_INNER_POSITION_24_HOUR : NUMBER_OUTER_POSITION_24_HOUR;\n}\n\nfunction getClockHandCirclePosition(mode, inner) {\n  if (mode !== MODE.HOURS_24) {\n    return NUMBER_OUTER_POSITION;\n  }\n\n  return inner ? NUMBER_INNER_POSITION_24_HOUR : NUMBER_OUTER_POSITION_24_HOUR;\n}\n\nfunction getClockHandCircleRadius(mode, inner) {\n  if (mode !== MODE.HOURS_24) {\n    return NUMBER_RADIUS_REGULAR / 2;\n  }\n\n  return inner ? NUMBER_RADIUS_HOUR_24_INNER / 2 : NUMBER_RADIUS_HOUR_24_OUTER / 2;\n}\n\nconst animationChange = 22;\nconst INNER_NUMBER_POSITIONING = {\n  exit: NUMBER_INNER_POSITION_24_HOUR + animationChange,\n  enter: NUMBER_INNER_POSITION_24_HOUR\n};\nexports.INNER_NUMBER_POSITIONING = INNER_NUMBER_POSITIONING;"]},"metadata":{},"sourceType":"script"}
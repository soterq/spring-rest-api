{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\negat\\\\IdeaProjects\\\\spring-rest-api\\\\my-app\\\\src\\\\components\\\\taskList.jsx\";\nimport React, { Component } from 'react';\n\nclass TaskList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: []\n    };\n\n    this.refreshTask = res => this.setState({\n      tasks: res\n    });\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/api/v1/tasks').then(res => res.json()).then(data => {\n      this.setState({\n        tasks: data\n      });\n    }).catch(console.log);\n  }\n\n  onDelete(id) {\n    fetch('http://localhost:8080/api/v1/tasks/' + id, {\n      method: 'DELETE'\n    }).then(() => {\n      const updatedState = this.state.tasks.filter(item => item.id !== id);\n      console.log(updatedState);\n      this.setState({\n        tasks: updatedState\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, \"Add new task\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"Task List\"), this.state.tasks.map(task => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card text-white bg-info mb-3\",\n      style: \"max-width: 18rem;\",\n      key: task.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }, task.severity), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }\n    }, \"task.title\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, task.description), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.onDelete(task.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    }, \"Delete\"))))));\n  }\n\n}\n\nexport default TaskList;","map":{"version":3,"sources":["C:/Users/negat/IdeaProjects/spring-rest-api/my-app/src/components/taskList.jsx"],"names":["React","Component","TaskList","state","tasks","refreshTask","res","setState","componentDidMount","fetch","then","json","data","catch","console","log","onDelete","id","method","updatedState","filter","item","render","map","task","severity","description"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,QAAN,SACYD,SADZ,CACsB;AAAA;AAAA;AAAA,SAElBE,KAFkB,GAEV;AACJC,MAAAA,KAAK,EAAE;AADH,KAFU;;AAAA,SA4BlBC,WA5BkB,GA4BJC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAACH,MAAAA,KAAK,EAAEE;AAAR,KAAd,CA5BH;AAAA;;AAOlBE,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACKC,IADL,CACUJ,GAAG,IAAIA,GAAG,CAACK,IAAJ,EADjB,EAEKD,IAFL,CAEWE,IAAD,IAAU;AACZ,WAAKL,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAEQ;AAAR,OAAd;AACH,KAJL,EAKKC,KALL,CAKWC,OAAO,CAACC,GALnB;AAMH;;AAEDC,EAAAA,QAAQ,CAACC,EAAD,EAAK;AACTR,IAAAA,KAAK,CAAC,wCAAwCQ,EAAzC,EAA6C;AAC9CC,MAAAA,MAAM,EAAE;AADsC,KAA7C,CAAL,CAGKR,IAHL,CAGU,MAAM;AACR,YAAMS,YAAY,GAAG,KAAKhB,KAAL,CAAWC,KAAX,CAAiBgB,MAAjB,CAAwBC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAA5C,CAArB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYI,YAAZ;AACA,WAAKZ,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAEe;AAAR,OAAd;AACH,KAPL;AASH;;AAIDG,EAAAA,MAAM,GAAG;AACL,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAK,MAAA,SAAS,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,EAEC,KAAKnB,KAAL,CAAWC,KAAX,CAAiBmB,GAAjB,CAAsBC,IAAD,iBACd;AAAK,MAAA,SAAS,EAAC,8BAAf;AAA8C,MAAA,KAAK,EAAC,mBAApD;AAAwE,MAAA,GAAG,EAAEA,IAAI,CAACP,EAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BO,IAAI,CAACC,QAAnC,CADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEA;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BD,IAAI,CAACE,WAA/B,CAFA,eAIA;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKV,QAAL,CAAcQ,IAAI,CAACP,EAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA,CAFJ,CADP,CAFD,CAFA,CAAR;AAkBH;;AAjDiB;;AAoDtB,eAAef,QAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass TaskList\n    extends Component {\n\n    state = {\n        tasks: []\n    };\n\n\n    componentDidMount() {\n        fetch('http://localhost:8080/api/v1/tasks')\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({tasks: data})\n            })\n            .catch(console.log)\n    }\n\n    onDelete(id) {\n        fetch('http://localhost:8080/api/v1/tasks/' + id, {\n            method: 'DELETE',\n        })\n            .then(() => {\n                const updatedState = this.state.tasks.filter(item => item.id !== id);\n                console.log(updatedState)\n                this.setState({tasks: updatedState});\n            })\n\n    }\n\n    refreshTask = res => this.setState({tasks: res})\n\n    render() {\n        return (<div>\n                <button >Add new task</button>\n                <div className={\"container\"}>\n                <h1 align=\"center\">Task List</h1>\n                {this.state.tasks.map((task) => (\n                        <div className=\"card text-white bg-info mb-3\" style=\"max-width: 18rem;\" key={task.id}>\n                            <div className=\"card-header\">{task.severity}</div>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">task.title</h5>\n                            <p className=\"card-text\">{task.description}</p>\n                            {/*<h5 className=\"card-subtitle mb-2 text-muted\">{task.creationDate}</h5>*/}\n                            <button onClick={() => this.onDelete(task.id)}>Delete</button>\n                        </div>\n                    </div>\n                ))}\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}